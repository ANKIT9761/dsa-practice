/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res= new ArrayList();
        
        // If there is no tree.
        if (root == null) return res;
        levelHelper(res,root,0);
        return res;
    }
    
    public void levelHelper (List<List<Integer>> res,TreeNode node,int level){ 
             
                if (res.size() == level)
                    res.add(new ArrayList<Integer>());
    
                res.get(level).add(node.val);
                
               
                if (node.left !=null) levelHelper(res,node.left,level+1);
                if (node.right!=null)levelHelper(res,node.right,level+1);
            
            }
              
    
}
